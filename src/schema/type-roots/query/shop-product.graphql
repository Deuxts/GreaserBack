type Query {
    shopProducts (
        "Pagina a la que accedemos al cargar"
        page: Int = 1, 
        "numero máximo de items que podra ver el usuario"
        itemsPage: Int = 20 
        "propiedad para saber si el item esta activo"
        active: ActiveFilterEnum = ACTIVE): ResultShopProduct
    shopProductsCategory (
        "Pagina a la que accedemos al cargar"
        page: Int = 1, 
        "numero máximo de items que podra ver el usuario"
        itemsPage: Int = 20 
        "propiedad para saber si el item esta activo"
        active: ActiveFilterEnum = ACTIVE,
        "ID de la categoria, se prodra ver como una lista de diferentes ID en el caso donde se requiera agregar más de alguna categoria para la busqueda"
        category: [ID!]!,
        "seleccion de elementos variados"
        random: Boolean = false): ResultShopProduct
    shopProductsOffersLast (
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPage: Int = 20,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE,
        "Tope del precio para considerar como oferta"
        topPrice: Float = -1,
        "Tope para especificar por debajo que hay poco stock"
        lastUnits: Int = -1,
        "Seleccionar los elementos de manera aleatoria"
        random: Boolean = false): ResultShopProduct    
        
}